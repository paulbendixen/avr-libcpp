// This file released under the LGPL
// Copyleft Paul M. Bendixen 2017

#ifndef STD_ARRAY
#define STD_ARRAY

namespace std
{
	template< typename T, size_t size >
	struct array
	{
		typedef T			value_type;
		typedef value_type*		pointer;
		typedef const value_type	const_pointer;
		typedef value_type&		reference;
		typedef const value_type&	const_reference;
		typedef value_type*		iterator;
		typedef const value_type*	const_iterator;
		typedef std::size_t		size_type;
		typedef std::ptrdiff_t		difference_type;
		typedef std::reverse_iterator< iterator >	reverse_iterator;
		typedef std::reverse_iterator< const_iterator >	const_reverse_iterator;


		T[ size ] data;
	}
}
#endif
// vim: se ft=cpp:
